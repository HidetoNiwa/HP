<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>どと～るブログ</title><link>https://www.hahahahaha-nnn.work/</link><atom:link href="https://www.hahahahaha-nnn.work/index.xml" rel="self" type="application/rss+xml"/><description>どと～るブログ</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja</language><lastBuildDate>Fri, 15 May 2020 17:39:04 +0900</lastBuildDate><image><url>https://www.hahahahaha-nnn.work/img/logo.jpg</url><title>どと～るブログ</title><link>https://www.hahahahaha-nnn.work/</link></image><item><title>Slackのカスタム絵文字の移行</title><link>https://www.hahahahaha-nnn.work/post/slack-emoji-move/</link><pubDate>Sun, 27 Sep 2020 02:38:54 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/post/slack-emoji-move/</guid><description>&lt;p>こんにちは、どと～ること、にゎ～んです。NHK学生ロボコンもついに2021のルールが発表されましたね。&lt;/p>
&lt;p>Slackのワークスペースの移行が行われていたりしてます。&lt;/p>
&lt;p>そのSlackのワークスペース移行に当たって、「カスタム絵文字」（自分たちで追加したスタンプのこと）の移行が面倒になったりします。
移行の方法に関して、インターネットの広い海に書かれていたりしますが、Slack apiの仕様が変更になったりして方法が変わっていたので2020/09現在の方法に関して、
備忘録をかねて記載していきたいと思います。&lt;/p>
&lt;h2 id="基本環境">基本環境&lt;/h2>
&lt;p>Windows10(64bit)　2020/09/27現在&lt;/p>
&lt;p>※MacやLinuxでもNode.jsさえインストールしてしまえば同様だと思います。（未検証）&lt;/p>
&lt;h2 id="絵文字をslackからエクスポート">絵文字をSlackからエクスポート&lt;/h2>
&lt;h3 id="nodejsのインストール">Node.jsのインストール&lt;/h3>
&lt;p>
&lt;a href="https://nodejs.org/ja/" target="_blank" rel="noopener">Node.js 公式サイト&lt;/a>へアクセス、自分のPCに合うインストーラをダウンロード。（筆者は12.18.4LTSをインストール）&lt;/p>
&lt;p>インストーラがダウンロード出来たら適当にYesをクリックしていきインストールする。&lt;br>
（この時、Add PATHにチェックが入っているか確認する。）&lt;/p>
&lt;h3 id="各種モジュールインストール">各種モジュールインストール&lt;/h3>
&lt;p>下記コマンドをコマンドプロンプト/PowerShellで実行し、インストールを行う。&lt;/p>
&lt;pre>&lt;code class="language-bash">npm install slack-node
npm install request
npm install fs
&lt;/code>&lt;/pre>
&lt;h3 id="slack-api-tokenの準備">Slack API Tokenの準備&lt;/h3>
&lt;p>
&lt;a href="https://api.slack.com/" target="_blank" rel="noopener">Slack api&lt;/a>へアクセスし、画面中央の&amp;quot;Start Building&amp;quot;をクリックする。&lt;/p>
&lt;p>すると、下記画像の様に出てくるので、適当に Slack App 名を決め、インストールするワークスペースを指定し、&amp;ldquo;create app&amp;quot;をクリックする。
&lt;figure >
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app.JPG" >
&lt;img src="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app.JPG" alt="" >
&lt;/a>
&lt;/figure>
&lt;/p>
&lt;p>続いて、Permissionsをクリックする。これによって、Permission管理ができる。
&lt;figure >
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app2.JPG" >
&lt;img src="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app2.JPG" alt="" width="75%" >
&lt;/a>
&lt;/figure>
&lt;/p>
&lt;p>ページ中央部に&amp;quot;Scopes&amp;quot;があるので、&amp;ldquo;Add an OAuth Scope&amp;quot;をクリックし、&amp;ldquo;emoji:read&amp;quot;を追加する。(赤色下線部)&lt;br>
そして、ページ上部の&amp;quot;Install App to Workspace&amp;quot;をクリックする。
&lt;figure >
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app3.JPG" >
&lt;img src="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app3.JPG" alt="" width="65%" >
&lt;/a>
&lt;/figure>
&lt;/p>
&lt;p>そして、ワークスペース連携の許可を求められるので、&lt;strong>許可&lt;/strong>する。&lt;br>
すると、&amp;ldquo;Bot User OAuth Access Token&amp;quot;が表示される。このTokenは後々使用するのでCopyしてメモる。
&lt;figure >
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app4.JPG" >
&lt;img src="https://www.hahahahaha-nnn.work/img/post/slack/emoji-app4.JPG" alt="" width="65%" >
&lt;/a>
&lt;/figure>
&lt;/p>
&lt;h3 id="インポートスクリプト作成">インポートスクリプト作成&lt;/h3>
&lt;p>インポートしたいディレクトリで、&amp;ldquo;app.js&amp;quot;といったファイル名で下記ファイルを作成する。&lt;br>
また、同じディレクトリに&amp;quot;image&amp;quot;といったディレクトリも作成する。&lt;/p>
&lt;pre>&lt;code class="language-js">var Slack = require('slack-node');
var request = require('request');
var fs = require('fs');
apiToken = &amp;quot;&amp;lt;API Token&amp;gt;&amp;quot;; // Slack APIトークンを&amp;quot; &amp;quot;内に貼り付け
slack = new Slack(apiToken);
slack.api(&amp;quot;emoji.list&amp;quot;, function (err, response) {
for(key in response.emoji){
url = response.emoji[key];
//エイリアスは無視
if(url.match(/alias/)){
continue;
}
// 取得対象の拡張子
extention = url.match(/\.[^\.]+$/);
request
.get(url)
.on('response', function (res) {
})
.pipe(fs.createWriteStream('image/' + key + extention));
}
});
&lt;/code>&lt;/pre>
&lt;h3 id="実行">実行&lt;/h3>
&lt;p>下記コマンドを実行して、カスタム絵文字のダウンロードを行う。&lt;/p>
&lt;pre>&lt;code class="language-bash">node app.js
&lt;/code>&lt;/pre>
&lt;h2 id="絵文字のslackへインポート">絵文字のSlackへインポート&lt;/h2>
&lt;h3 id="slack-custom-emoji-managerchrome拡張機能-のインストール">Slack Custom Emoji Manager(Chrome拡張機能) のインストール&lt;/h3>
&lt;p>
&lt;a href="https://chrome.google.com/webstore/detail/slack-custom-emoji-manage/cgipifjpcbhdppbjjphmgkmmgbeaggpc/related" target="_blank" rel="noopener">Slack Custom Emoji Manager(Chrome拡張機能)&lt;/a>へchrome/edge（最新版）等、chrome拡張機能が使えるブラウザでアクセスし、「chromeに追加」をクリック&lt;/p>
&lt;p>すると、https://(ワークスペース名).slack.com/customize/emoji へアクセスすると下記画像の様になる。
&amp;ldquo;ここに追加したい絵文字をドラック＆ドロップ&amp;quot;で投下すると、絵文字の追加が順次行われていく。
&lt;figure >
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/slack/slack-stamp-ext.JPG" >
&lt;img src="https://www.hahahahaha-nnn.work/img/post/slack/slack-stamp-ext.JPG" alt="" width="65%" >
&lt;/a>
&lt;/figure>
&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>以上で、Slackのカスタム絵文字の移行は完了です！&lt;/p>
&lt;p>APIは生物なので、開発の具合やユーザ要望によって仕様変更が起こるのは多々ですよね&amp;hellip;&lt;br>
今後はどうなっていくのやら🤔&lt;/p>
&lt;h2 id="参考情報">参考情報&lt;/h2>
&lt;p>chrome拡張機能を入れると、&amp;ldquo;すべての絵文字をダウンロード&amp;quot;とボタンがあるがダウンロードすることは出来ない。&lt;br>
（API仕様変更のため&amp;hellip;?，作成者様の
&lt;a href="https://qiita.com/nabekou29/items/83e11a58724517f66cad#%E3%81%A7%E3%81%8D%E3%81%9F%E3%82%82%E3%81%AE" target="_blank" rel="noopener">Qiita記事&lt;/a>にはできると書かれているのだが&amp;hellip;）&lt;/p>
&lt;p>下記サイトを参考にさせていただきました。&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://blog.ef-4.co.jp/slack-%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E7%B5%B5%E6%96%87%E5%AD%97-%E4%B8%80%E6%8B%AC%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%83%BB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC/" target="_blank" rel="noopener">Slack カスタム絵文字 一括ダウンロード・インストール方法 まとめ&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://qiita.com/nabekou29/items/83e11a58724517f66cad#%E3%81%A7%E3%81%8D%E3%81%9F%E3%82%82%E3%81%AE" target="_blank" rel="noopener">Slackのカスタム絵文字を一括ダウンロード・削除するChrome拡張を作ってみた&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Hugo Academicテーマの導入</title><link>https://www.hahahahaha-nnn.work/post/hugo_academic/</link><pubDate>Fri, 22 May 2020 00:29:36 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/post/hugo_academic/</guid><description>&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>こんにちは！どと～ることにゎ～んです。&lt;/p>
&lt;p>これまでに、Hugoの環境構築の仕方、投稿の仕方と投稿を出してきました。&lt;/p>
&lt;ul>
&lt;li>
&lt;a href="https://www.hahahahaha-nnn.work/post/hugo_in_windows/" target="_blank" rel="noopener">Windows上でのHugoの構築の仕方&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.hahahahaha-nnn.work/post/how_to_hugo_post/" target="_blank" rel="noopener">Hugoでの投稿の仕方&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>これらをもとに、今回は、HugoのAcademicテーマの導入に関して記述していきたいと思います。&lt;/p>
&lt;h2 id="academic-テーマとは">Academic テーマとは&lt;/h2>
&lt;p>HugoのAcademicテーマとは、数多くあるHugoのテーマの中で最もGitHub上でスターがつけられている（らしい）&lt;/p>
&lt;p>実は本サイトでも採用しています。ブログと、個人/組織紹介を兼ねたWebサイトに向いています。&lt;/p>
&lt;h2 id="academicテーマサンプル導入">Academicテーマサンプル導入&lt;/h2>
&lt;p>それでは、実際にAcademicテーマの導入を進めて行きたいと思います。&lt;/p>
&lt;p>（以下、Hugo,gitがコマンドラインで使用可能であることを前提に話を進めていきます。）&lt;/p>
&lt;h3 id="git-clone">git clone&lt;/h3>
&lt;p>コマンドラインを開き、下記コマンドを入力します。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">git clone https://github.com/sourcethemes/academic-kickstart.git Site_name&lt;/code>&lt;/pre>&lt;/div>
&lt;p>これだと、サンプル部分のみgit cloneされAcademicテーマのサブモジュール部分がcloneされないので下記コマンドを順次実行していきます。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">cd Site_name
git submodule update --init --recursive&lt;/code>&lt;/pre>&lt;/div>
&lt;p>そしたら下記コマンドを実行してみます。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">hugo server&lt;/code>&lt;/pre>&lt;/div>
&lt;p>ここまで、問題がなければ
&lt;a href="http://localhost:1313/" target="_blank" rel="noopener">http://localhost:1313/&lt;/a>にアクセスしましょう！すると下記画像のように表示されるかと思います。（大体問題になるのは、git submoduleを導入するあたりです。）&lt;/p>
&lt;figure id="figure-academicテーマ動作結果">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/hugo/hugo-Academic.JPG" data-caption="Academicテーマ動作結果">
&lt;img src="https://www.hahahahaha-nnn.work/img/post/hugo/hugo-Academic.JPG" alt="" width="400px" >
&lt;/a>
&lt;figcaption>
Academicテーマ動作結果
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>とりあえず、Academicテーマサンプルページの導入方法は以上になります。&lt;/p>
&lt;p>このサンプルページをもとに、各種設定を行いGitHub Pageseとして公開をしていくのはまた後々のお話&amp;hellip;&lt;/p>
&lt;p>また、他のHugoテーマと同様にCSSや設定をカスタマイズすることが可能です！（このサイトでは、記事の表示幅、フォントをカスタマイズしています。）&lt;/p>
&lt;p>気が向いたら、その辺も書いていきましょうかねぇ.。o○&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;a href="https://qiita.com/harumaxy/items/58e7e4273c61e7e260b3" target="_blank" rel="noopener">Hugo + Academic テーマを使ったブログの作り方&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Links</title><link>https://www.hahahahaha-nnn.work/links/</link><pubDate>Fri, 15 May 2020 17:39:04 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/links/</guid><description>&lt;p>自分が、現在/過去に関連したプロジェクト等のリンク集です。それぞれの活動にご賛同いただけましたらご支援等頂けますと幸いです。&lt;/p>
&lt;h2 id="現在所属しているプロジェクト">現在所属しているプロジェクト&lt;/h2>
&lt;h3 id="ouxt-polaris">OUXT Polaris&lt;/h3>
&lt;p>
&lt;a href="https://www.robotx.org/" target="_blank" rel="noopener">Maritime Robotx Challenge&lt;/a>へむけて結成された学生主体のロボコンチーム。&lt;/p>
&lt;p>
&lt;a href="http://www.wam-v.com/" target="_blank" rel="noopener">WAM-V&lt;/a>といった船体に制御機器、センサーを搭載し、完全自動操縦で大会中のタスクをこなしていく。&lt;/p>
&lt;ul>
&lt;li>ホームページ：
&lt;a href="https://www.ouxt.jp/" target="_blank" rel="noopener">https://www.ouxt.jp/&lt;/a>&lt;/li>
&lt;li>Twitter：
&lt;a href="https://twitter.com/OUXT_Polaris" target="_blank" rel="noopener">https://twitter.com/OUXT_Polaris&lt;/a>&lt;/li>
&lt;li>GitHub：
&lt;a href="https://github.com/OUXT-Polaris" target="_blank" rel="noopener">https://github.com/OUXT-Polaris&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="学生支援団体-scramble">学生支援団体 Scramble&lt;/h3>
&lt;blockquote>
&lt;p>Scrambleはロボット系，工学系の学生育成・支援を目的とした団体で多くの学生とそのメンター役の若手技術者から構成されています．実践的な育成手段として
各種ロボットコンテストに参加しており，2017年9月にロボカップ小型リーグ班を結成。2018年12月にはRoboMaster班を結成しました。
2019年7月からはロボカップジュニア班、2019年9月からはマイクロマウス班を新設し、現在4つのロボコンに出場するため計72名
（学生53名、若手技術者19名）のメンバがロボット作りを進めています。メンバは主に全国各地のロボットコンテスト，特に高専・学生・ABUロボコンの
現役生・OB・OGから構成されています． (Scramble HPより)&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>ホームページ：
&lt;a href="https://nararobocon.sakura.ne.jp/scramble/" target="_blank" rel="noopener">https://nararobocon.sakura.ne.jp/scramble/&lt;/a>&lt;/li>
&lt;li>Twitter：
&lt;a href="https://twitter.com/scramble_jpn" target="_blank" rel="noopener">https://twitter.com/scramble_jpn&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="過去に所属していたプロジェクト">過去に所属していたプロジェクト&lt;/h2>
&lt;h3 id="大阪大学公認ロボット製作団体-robohan">大阪大学公認ロボット製作団体 Robohan&lt;/h3>
&lt;ul>
&lt;li>ホームページ：
&lt;a href="https://www.robohan.net/" target="_blank" rel="noopener">https://www.robohan.net/&lt;/a>&lt;/li>
&lt;li>ブログ：
&lt;a href="https://blog.robohan.net/" target="_blank" rel="noopener">https://blog.robohan.net/&lt;/a>&lt;/li>
&lt;li>Twitter：
&lt;a href="https://twitter.com/Robohan_" target="_blank" rel="noopener">https://twitter.com/Robohan_&lt;/a>&lt;/li>
&lt;li>大阪大学未来基金：
&lt;a href="https://www.miraikikin.osaka-u.ac.jp/450/" target="_blank" rel="noopener">https://www.miraikikin.osaka-u.ac.jp/450/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Hugo Shortcode</title><link>https://www.hahahahaha-nnn.work/pages/hugo-shortcode/</link><pubDate>Fri, 15 May 2020 16:40:00 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/pages/hugo-shortcode/</guid><description>&lt;p>このページでは、Hugoでよく使われるShortCodeについて書いて行きます。&lt;/p>
&lt;h2 id="figure">figure&lt;/h2>
&lt;p>{{&amp;lt; figure src=&amp;rdquo;/img/pages/hugo-shortcode/avatar.jpg&amp;rdquo; title=&amp;quot;画像投稿サンプル&amp;rdquo; width=&amp;quot;150px&amp;rdquo;&amp;gt;}}&lt;/p>
&lt;h3 id="出力例">出力例&lt;/h3>
&lt;figure id="figure-画像投稿サンプル">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/pages/hugo-shortcode/avatar.jpg" data-caption="画像投稿サンプル">
&lt;img src="https://www.hahahahaha-nnn.work/img/pages/hugo-shortcode/avatar.jpg" alt="" width="150px" >
&lt;/a>
&lt;figcaption>
画像投稿サンプル
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="パラメータ">パラメータ&lt;/h3>
&lt;h4 id="src">src&lt;/h4>
&lt;p>/static/以下のファイルパス&lt;/p>
&lt;h4 id="title">title&lt;/h4>
&lt;p>画像につけるタイトル&lt;/p>
&lt;h3 id="width">width&lt;/h3>
&lt;p>画像幅(px,%で指定可能)&lt;/p>
&lt;!--## High
-->
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>shortcodeに関する公式リファレンス：
&lt;a href="https://gohugo.io/content-management/shortcodes/" target="_blank" rel="noopener">https://gohugo.io/content-management/shortcodes/&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Hugoでの投稿の仕方</title><link>https://www.hahahahaha-nnn.work/post/how_to_hugo_post/</link><pubDate>Fri, 15 May 2020 00:27:50 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/post/how_to_hugo_post/</guid><description>&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>こんにちは、どと～ることにゎ～んです。さて以前、HugoをWindows上で環境構築する方法を示しました。今回はHugoを使ってプロジェクトを作成する方法を示したいと思います。&lt;/p>
&lt;h2 id="hugoプロジェクトの作成">Hugoプロジェクトの作成&lt;/h2>
&lt;p>PowerShell、Terminalなど使用OSにおけるコマンドコンソール（以下、コマンドライン）を開き、プロジェクトを作成したいディレクトリにcdやmkdirを使用して移動します。移動した先で、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">hugo new site test&lt;/code>&lt;/pre>&lt;/div>
と実行します。すると、そのディレクトリに、&lt;strong>test&lt;/strong>といったフォルダが作成されます。その中身をtreeコマンドを用いて確認すると、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">test
├─archetypes
├─content
├─data
├─layouts
├─resources
│ └─_gen
│ ├─assets
│ └─images
├─static
└─themes&lt;/code>&lt;/pre>&lt;/div>
といった階層になっているのが確認できます。&lt;/p>
&lt;h2 id="テーマ導入">テーマ導入&lt;/h2>
&lt;p>これでプロジェクトは完成しましたが、これではサイトとして表示されないので、テーマを導入していきたいと思います。ここでは、cupperといったシンプルなテーマを使用していきます。コマンドラインで、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">cd test/themes&lt;/code>&lt;/pre>&lt;/div>
とthemesディレクトリに移動します。
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">git clone https://github.com/zwbetz-gh/cupper-hugo-theme.git&lt;/code>&lt;/pre>&lt;/div>
として、git上から拾ってきます。&lt;/p>
&lt;h2 id="設定ファイル編集">設定ファイル編集&lt;/h2>
&lt;p>先ほど、git clone してきたテーマを利用するために、設定ファイルの記述を行います。設定ファイルは、test/config.tomlです。これを開くと、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">baseURL &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://example.org/&amp;#34;&lt;/span>
languageCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;en-us&amp;#34;&lt;/span>
title &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;My New Hugo Site&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
となっています。これを、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">baseURL &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://localhost:1313/&amp;#34;&lt;/span>
languageCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;jp&amp;#34;&lt;/span>
title &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;My New Hugo Site&amp;#34;&lt;/span>
theme &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;cupper-hugo-theme&amp;#34;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
と、変更します。それぞれの設定項目は以下のようです。&lt;/p>
&lt;ul>
&lt;li>baseURL：サイトのURL（今回の場合は、ローカル環境での動作環境を行うため上記設定）&lt;/li>
&lt;li>languageCode：デフォルト言語&lt;/li>
&lt;li>title：サイトタイトル&lt;/li>
&lt;li>theme：使用するテーマ名（/themese/ディレクトリに存在するフォルダ名）&lt;/li>
&lt;/ul>
&lt;h2 id="新しいページ生成">新しいページ生成&lt;/h2>
&lt;p>さて、使用するテーマまで設定することができたので、新しいページを生成していきたいと思います。
コマンドラインで、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">cd test&lt;/code>&lt;/pre>&lt;/div>
とtestディレクトリに移動し、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">hugo new test.md&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>と入力します。すると、&lt;strong>/test/content/&lt;/strong> に &lt;strong>test.md&lt;/strong>といったファイルが生成されます。このファイルを開くと、&lt;/p>
&lt;p>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-markdown" data-lang="markdown">---
title: &amp;#34;Test&amp;#34;
date: 2020-05-15T00:32:24+09:00
draft: true
---&lt;/code>&lt;/pre>&lt;/div>
となっています。この下に、下記のように入力してみます。
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-markdown" data-lang="markdown">---
title: &amp;#34;Test&amp;#34;
date: 2020-05-15T00:32:24+09:00
draft: false
---
&lt;span style="color:#75715e">## これはテストです
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
ページ中のコンテンツはこの様に表示されます。&lt;/code>&lt;/pre>&lt;/div>
保存したのち、コマンドラインに下記のコマンドを入力します。
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">hugo server&lt;/code>&lt;/pre>&lt;/div>
そして、
&lt;a href="http://localhost:1313/test/" target="_blank" rel="noopener">http://localhost:1313/test/&lt;/a> にアクセスします。すると、下記画像のように投稿が反映されたことが分かります！
&lt;figure id="figure-アクセスした様子">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/hugo/hugo-testPage.JPG" data-caption="アクセスした様子">
&lt;img src="https://www.hahahahaha-nnn.work/img/post/hugo/hugo-testPage.JPG" alt="" >
&lt;/a>
&lt;figcaption>
アクセスした様子
&lt;/figcaption>
&lt;/figure>
&lt;/p>
&lt;h2 id="静的なページ生成">静的なページ生成&lt;/h2>
&lt;p>先述の部分で、ローカル環境での確認ができたので続いて、Web上に公開するためにhtmlやcssを生成する方法を記述していきます。コマンドラインで/test/ディレクトリ上にて、
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">hugo&lt;/code>&lt;/pre>&lt;/div>
と、入力します。すると&amp;hellip; &lt;strong>/test/public/&lt;/strong> といったディレクトリが生成されます。この中に、&lt;strong>index.html&lt;/strong> や &lt;strong>/test/index.html&lt;/strong>(先ほど示したtestページ)が生成されました！&lt;/p>
&lt;p>以上で、htmlの生成まで出来たのでapache2やnginxを使ってサーバ上にファイルを置いて閲覧することができるようになったかと思います。&lt;/p>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>次回(近いうちに…)、Hugoを使ったテンプレートページでの開発のお話を書いていきたいと思います。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>Hugoでのテーマ追加方法：
&lt;a href="https://qiita.com/yakimeron/items/42d537374abde5517267" target="_blank" rel="noopener">https://qiita.com/yakimeron/items/42d537374abde5517267&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>BroadFiler</title><link>https://www.hahahahaha-nnn.work/post/broadfiler/</link><pubDate>Tue, 12 May 2020 00:00:17 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/post/broadfiler/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>こんにちは！どと～ることにゎ～んです。さて、皆さんはWindowsを日ごろ使用しているかと思います。（Macユーザ/Ubuntu(Linux)ユーザもいらっしゃるかと思いますが、本記事はWindowsユーザ向け記事です&amp;hellip;）&lt;/p>
&lt;p>しかし、Windowsのデフォルトのファイルソフト（ファイラー）である、Windows Explorer ですが、作業を進めていくうちにWindow数が多くなっていき、&lt;strong>自分がどのフォルダを開いているか分からなくなる&lt;/strong>ことが多々あるかと思います。そこで、今回は「BroadFiler」を用いて&lt;strong>タブ&lt;/strong>、&lt;strong>グループ&lt;/strong>を使ったファイル操作管理を行っていこうと思います。&lt;/p>
&lt;h1 id="インストールの仕方">インストールの仕方&lt;/h1>
&lt;h2 id="インストーラーをダウンロード">インストーラーをダウンロード&lt;/h2>
&lt;p>まず、
&lt;a href="https://www.vector.co.jp/soft/dl/winnt/util/se490120.html" target="_blank" rel="noopener">ダウンロードサイト&lt;/a>にアクセスし、画面中央にある、ダウンロードページへをクリックします。&lt;/p>
&lt;p>続いて、&lt;strong>このソフトを今すぐダウンロード&lt;/strong>をクリックします。&lt;/p>
&lt;p>すると、zip形式でインストーラーをダウンロードできるので、展開します。&lt;/p>
&lt;figure id="figure-zipファイルを展開した結果">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/BroadFiler/zip.JPG" data-caption="zipファイルを展開した結果">
&lt;img src="https://www.hahahahaha-nnn.work/img/post/BroadFiler/zip.JPG" alt="" >
&lt;/a>
&lt;figcaption>
zipファイルを展開した結果
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="インストーラーを実行">インストーラーを実行&lt;/h2>
&lt;p>展開した結果、様々なファイルがありますが&lt;strong>steup.exe&lt;/strong>を実行するだけで大丈夫です。（他の解凍ソフトはうまくセットアップできなかった時のものらしい）&lt;/p>
&lt;p>setup.exeを実行したら、「次へ」「同意する」を押していくとセットアップできます。
&lt;figure id="figure-インストール完了した結果">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/BroadFiler/end-install.JPG" data-caption="インストール完了した結果">
&lt;img src="https://www.hahahahaha-nnn.work/img/post/BroadFiler/end-install.JPG" alt="" >
&lt;/a>
&lt;figcaption>
インストール完了した結果
&lt;/figcaption>
&lt;/figure>
&lt;/p>
&lt;h1 id="では実際に実行してみましょう">では、実際に実行してみましょう&lt;/h1>
&lt;p>それでは、実際に実行してみたいと思います。下記画像のようなアイコンが存在すると思うので実行してみます。
なお、ここで注意してほしいのは、右クリックして&lt;strong>管理者として実行&lt;/strong>することです。&lt;/p>
&lt;figure id="figure-アイコン">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/BroadFiler/ico.png" data-caption="アイコン">
&lt;img src="https://www.hahahahaha-nnn.work/img/post/BroadFiler/ico.png" alt="" >
&lt;/a>
&lt;figcaption>
アイコン
&lt;/figcaption>
&lt;/figure>
&lt;h1 id="感想">感想&lt;/h1>
&lt;p>Windwos Explorerにはない、&lt;strong>タブ機能&lt;/strong>、&lt;strong>グループ機能&lt;/strong>がありその辺を欲してる人にとってはとてもありがたいソフトになってるかと思います。&lt;/p>
&lt;figure id="figure-実行した結果">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/post/BroadFiler/show.JPG" data-caption="実行した結果">
&lt;img src="https://www.hahahahaha-nnn.work/img/post/BroadFiler/show.JPG" alt="" >
&lt;/a>
&lt;figcaption>
実行した結果
&lt;/figcaption>
&lt;/figure>
&lt;p>そういえば、だいぶ以前にWindows Explorerにタブ機能が実装されるという話があったのですけどどうなったんですかね&amp;hellip;&lt;/p></description></item><item><title>VScode</title><link>https://www.hahahahaha-nnn.work/pages/vscode/</link><pubDate>Sun, 10 May 2020 15:00:37 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/pages/vscode/</guid><description>&lt;p>本ページでは、VScodeで好きなテーマ/拡張機能に関してメモしていきます。&lt;/p>
&lt;h2 id="テーマ">テーマ&lt;/h2>
&lt;h3 id="slack-theme">Slack Theme&lt;/h3>
&lt;p>Slack風の配色にしてくれるテーマ&lt;/p>
&lt;p>URL: &lt;a href="https://marketplace.visualstudio.com/items?itemName=felipe-mendes.slack-theme">https://marketplace.visualstudio.com/items?itemName=felipe-mendes.slack-theme&lt;/a>&lt;/p>
&lt;figure id="figure-実際に使用している様子">
&lt;a data-fancybox="" href="https://www.hahahahaha-nnn.work/img/pages/vscode/slack_theme.JPG" data-caption="実際に使用している様子">
&lt;img src="https://www.hahahahaha-nnn.work/img/pages/vscode/slack_theme.JPG" alt="" >
&lt;/a>
&lt;figcaption>
実際に使用している様子
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="拡張機能">拡張機能&lt;/h2>
&lt;h3 id="japanese-language-pack-for-visual-studio-code">Japanese Language Pack for Visual Studio Code&lt;/h3>
&lt;p>言わずと知れた、Visual Studio日本語化拡張機能
これを入れることにより、設定画面とかが基本的に日本語となる&lt;/p>
&lt;p>URL:&lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-ja">https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-ja&lt;/a>&lt;/p>
&lt;h3 id="todo-highlight">TODO Highlight&lt;/h3>
&lt;p>TODO: と記述した部分にをハイライトしてくれる拡張機能&lt;/p>
&lt;p>URL: &lt;a href="https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight">https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight&lt;/a>&lt;/p>
&lt;h3 id="todo">Todo+&lt;/h3>
&lt;p>コメントアウトでTODO:と書いた部分をリストアップしてくれる拡張機能&lt;/p>
&lt;p>URL: &lt;a href="https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus">https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus&lt;/a>&lt;/p>
&lt;h3 id="markdown-all-in-one">Markdown All in One&lt;/h3>
&lt;p>MarkDownで記述した時、補完を自動で行ってくれるもの&lt;/p>
&lt;p>URL:&lt;a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&lt;/a>&lt;/p></description></item><item><title>Hugo(Windows)セットアップ</title><link>https://www.hahahahaha-nnn.work/post/hugo_in_windows/</link><pubDate>Fri, 08 May 2020 12:15:00 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/post/hugo_in_windows/</guid><description>&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>こんにちは！どと～ること、にゎ～んです。さて、今日はhugoのWindowsでの環境構築のやり方について記述していきたいと思います。&lt;/p>
&lt;h2 id="hugoとは">Hugoとは&lt;/h2>
&lt;p>導入として、Hugoの紹介。Hugoとは、「静的ファイルでサイトを作るための支援ツール」です。
他のWebページ作成ツールとして、Wordpressなどありますがこれらのサイトにはデータベース等が必要となり、保守/管理といった点からも煩雑さが目立ちます。[1]&lt;/p>
&lt;p>基本的に、HugoのサイトはMarkDown（GitHubとかのReadMe.mdとか）形式で記述することができ、記述の容易性等も挙げることができるかと思います。&lt;/p>
&lt;h2 id="windows上でのhugoの環境構築">Windows上でのHugoの環境構築&lt;/h2>
&lt;p>Windows上のhugo環境構築方法として下記の2種類を用いた方法があるそうです。[2]&lt;/p>
&lt;ul>
&lt;li>scoop&lt;/li>
&lt;li>Chocolatey&lt;/li>
&lt;/ul>
&lt;p>それぞれ、UbuntuやCentOSで言うところのaptやyumといったパッケージ管理ソフトだそうです。（筆者もよくわかってませんけど、できたからよし！！！）今回ではscoopを用いた方法にしてみたいと思います。&lt;/p>
&lt;h2 id="下準備scoopの環境構築">（下準備）scoopの環境構築&lt;/h2>
&lt;p>それでは、下準備としてscoopの環境構築を行っていきたいと思います。
まず、PowerShellを起動します。&lt;/p>
&lt;p>そして、続いて下記コマンドを実行します。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
iwr -useb get.scoop.sh | iex&lt;/code>&lt;/pre>&lt;/div>
&lt;p>以上で完了です！！！早いですね、簡単ですね、誰でもできそうですね。&lt;/p>
&lt;h3 id="確認方法">確認方法&lt;/h3>
&lt;p>&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">scoop help&lt;/code>&lt;/pre>&lt;/div>
これで、Scoopの各種コマンドの確認ができます。&lt;/p>
&lt;h3 id="powershell管理者権限に関して">PowerShell管理者権限に関して&lt;/h3>
&lt;p>サイトによっては、&amp;ldquo;管理者権限で&amp;quot;って記述も見られますが、Hugoの環境構築を行いたい場合は普通の状態で構いません
ってか、管理者権限で環境構築すると、管理者として今後走らせないといけない煩雑さが生まれたりもする？*要検証&lt;/p>
&lt;h2 id="hugoの環境構築">Hugoの環境構築&lt;/h2>
&lt;p>それでは、続いてHugoの環境構築を行っていきます。Hugoには、&amp;lsquo;&amp;lsquo;&amp;lsquo;Hugo'&amp;lsquo;&amp;lsquo;と'&amp;lsquo;&amp;lsquo;Hugo Extended'&amp;lsquo;&amp;lsquo;と2種類存在します。&lt;/p>
&lt;p>特に理由がない場合は、&amp;lsquo;&amp;lsquo;&amp;lsquo;Hugo Extended'&amp;lsquo;&amp;lsquo;のインストールをおすすめします。（上位互換のため&amp;hellip;）一部のテーマは、&amp;lsquo;&amp;lsquo;&amp;lsquo;Hugo Extended'&amp;lsquo;&amp;lsquo;でないとコンパイルできないときがあります。&lt;/p>
&lt;p>インストールには下記のコマンドをPowerShellで実行すれば大丈夫です。[3]&lt;/p>
&lt;h3 id="hugo-extended">Hugo Extended&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">scoop install hugo-extended&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="hugo">Hugo&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">scoop install hugo-extended&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>以上で、HugoのWindows上に環境構築する方法はおしまいです！これであなたも静的な安定したWebページライフを！&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://knowledge.sakura.ad.jp/22908/">https://knowledge.sakura.ad.jp/22908/&lt;/a>
&lt;ul>
&lt;li>Hugoに関する紹介に使用させていただきました。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://qiita.com/Dooteeen/items/12dc8fb14042888113d0">https://qiita.com/Dooteeen/items/12dc8fb14042888113d0&lt;/a>
&lt;ul>
&lt;li>Scoopのインストール方法を参考にさせて頂きました。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://gohugo.io/getting-started/installing/">https://gohugo.io/getting-started/installing/&lt;/a>
&lt;ul>
&lt;li>hugo公式ドキュメント、windowsでの環境構築のお話が書かれている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>投稿方針/サイト移設に関して</title><link>https://www.hahahahaha-nnn.work/post/first-post/</link><pubDate>Thu, 30 Apr 2020 00:15:41 +0900</pubDate><guid>https://www.hahahahaha-nnn.work/post/first-post/</guid><description>&lt;p>お久しぶりです！どと～ること、にゎ～んです。&lt;/p>
&lt;p>さて、以前より運営していたどと～るブログの方ですが、諸般の事情によりサイトを閉鎖しました。まぁ、その辺の事情等は後々書いていこうかと思っていたりもします。&lt;/p>
&lt;p>以前のサイトと同様に技術系に関することを中心に記述していきたいと思います。流し読み程度にご覧いただければと思いますのでよろしくお願いします.。o○&lt;/p></description></item></channel></rss>