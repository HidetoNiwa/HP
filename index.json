[{"authors":["HidetoNiwa"],"categories":null,"content":"NHK学生ロボコンで回路製作をしつつチーム運営を行っていた者\n最近は、流体やWebサービス関係のお勉強をしながら、応援をしている立場。\n 所属団体 紹介\n所属   大阪大学ロボット製作団体Robohan OB（回路班/運営系/鯖管）  関西春ロボコン運営委員会 OUXT 回路/運営班 一般社団法人次世代ロボットエンジニア支援機構（Scramble） 運営・広報イベントG イベント係  ","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"ja","lastmod":-62135596800,"objectID":"9adb3980340c1e023a05a0363201ed37","permalink":"https://www.hahahahaha-nnn.work/author/%E3%81%A8%E3%81%A8%E3%82%8B/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E3%81%A8%E3%81%A8%E3%82%8B/","section":"authors","summary":"NHK学生ロボコンで回路製作をしつつチーム運営を行っていた者","tags":null,"title":"どと～る","type":"authors"},{"authors":["HidetoNiwa"],"categories":["CubeIDE","eclipse","STM32"],"content":"お久しぶりです，にゎ～んです．さて，今回はCubeIDEにおけるコード整形のお話を書いていきたいと思います．\n手動整形 整形したいファイル上で，「Ctrl」+「Shift」+「f」を押します． すると，下図のような選択が出てくるので好きな方を選んで「OK」を押します．\n そのファイル全部を行う． その行のみ行う．    コード整形選択肢   自動整形 ページ上部の「Window」\u0026gt;「Preference」をクリック.\n  「Window」\u0026gt;「Preference」   Preference中の「C/C++」\u0026gt;「Editor」\u0026gt;「Save Actions」の\u0026quot;Format source code\u0026quot;にチェックを入れ，下の\u0026quot;Apply and Close\u0026quot;をクリック．\n  「Window」\u0026gt;「Preference」   ","date":1609206940,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1609206940,"objectID":"3de2054d67fe0d1f260e3edc2ef5c143","permalink":"https://www.hahahahaha-nnn.work/post/cubeide-formmating/","publishdate":"2020-12-29T10:55:40+09:00","relpermalink":"/post/cubeide-formmating/","section":"post","summary":"CubeIDEにおける手動整形・自動整形のお話","tags":["CubeIDE","eclipse","STM32"],"title":"CubeIDEコード整形","type":"post"},{"authors":["HidetoNiwa"],"categories":["sample"],"content":"サンプル表示ページです。それぞれの記法を参考にしてみてください。 参考リンク\n各レベル表示 h1 h2 h3 h4 h5 h6 リンク https://www.robohan.net/\n RobohanHP\n太字・斜体 太字や斜体を表示させるとこうなります。Boldやitalic\nリスト  記号型のリスト レベル1  レベル2  レベル3  レベル4  レベル5           数字型のリスト レベル1  レベル2  レベル3  レベル4  レベル5          表 中央揃え（基本形）    A1 B1 C1     A2 B2 C2   A3 B3 C3   A4 B4 C4    表の様々な揃え方    左揃え 中央揃え 右揃え     A2 B2 C2   A3 B3 C3   A4 B4 C4    ソースコード #include\u0026lt;stdio.h\u0026gt; int main(void){ printf(\u0026quot;Hello World?\u0026quot;); return 0; }  引用  まことに小さな国が、開化期を迎えようとしている。\n小さなといえば、明治初年の日本ほど小さな国はなかったであろう。\n産業といえば農業しかなく、人材といえば三百年の間、読書階級であった旧士族しかなかった。\n明治維新によって、日本人ははじめて近代的な「国家」というものをもった。誰もが「国民」になった。\n不慣れながら「国民」になった日本人たちは、日本史上の最初の体験者としてその新鮮さに昂揚した。\nこの痛々しいばかりの昂揚がわからなければ、この段階の歴史はわからない。\n スペシャルドラマ坂の上の雲 - NHK　冒頭\n  取り消し線 取り消し線\nHugoショートコード 代表的なものだけを列挙します。 その他は、 参考リンク参照。\n画像   Robohan Logo   Youtube   元リンク： https://www.youtube.com/watch?v=q1UOki3PdAM\nTweet 本日RobohanのTwitterは10周年を迎えました❗\n先輩方の技術を受け継ぎ、来たるNHKロボコン2021に向けて、そしてその先に向けてがんばっていきます。\n今後もRobohanをよろしくお願いします❗\n1枚目:NHKロボコン2010\n2枚目:NHKロボコン2011\n3枚目:2020年度新歓の様子#ロボコン pic.twitter.com/sCwP3YmaGw\n\u0026mdash; 大阪大学Robohan (@Robohan_) October 31, 2020  元リンク： https://twitter.com/Robohan_/status/1322437654475010048\n","date":1604911944,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1604911944,"objectID":"7cce010dc015a937e6841b4e289c7b7d","permalink":"https://www.hahahahaha-nnn.work/sample/","publishdate":"2020-11-09T17:52:24+09:00","relpermalink":"/sample/","section":"","summary":"サンプル表示ページです。それぞれの記法を参考にしてみてくださ","tags":["sample"],"title":"Sample","type":"page"},{"authors":["HidetoNiwa"],"categories":["回路"],"content":"インターネット上に公開している各種資料をまとめたページとなります。\nArduinoを用いたキソ電子工作 2 発表日：2020/10/07\n母校、高校科学部にてオンライン形式にて説明した資料\n  Arduinoを用いたキソ電子工作2  from どと〜る   Arduinoを用いた基礎電子工作 発表日：2020/09/08\n母校、高校科学部にてArduinoを用いた電子工作体験を行いたいとのことで、オンライン形式にて説明に用いた資料\n  Arduinoを用いたキソ電子工作  from どと〜る   卒業論文発表（口頭試問） 発表日：2020/02/19\n伸縮性導電性布を用いたフレキシブル\u000bストレッチセンサの開発と応用\n―やわらかいロボットのためのやわらかいセンサの実現に向けて―\n上記タイトルにて、作成した卒業論文に付随する口頭試問資料\n  Flexible Stretch Sensor Using Stretchable Conductive Cloth  from どと〜る   OSAKA TAKOYAKI 発表日：2019/09/16\nRoboMaster大阪チーム OSAKA TAKOYAKI（現在、解体済み）の活動紹介\nRoboMaster Japan サマーキャンプ 2019活動報告\n  20190916大工大技術交流会2019 OSAKA TAKOYAKI  from どと〜る   エキスポシティハッカソン（Fact-Real） 発表日：2018/09/28\nエキスポシティ（大阪・吹田）にて行われました「エキスポシティハッカソン」にて発表させて頂いたスライドです（個人名等は削除させていただきました）\n  エキスポシティハッカソン（Fact-Real）  from どと〜る   「かいろ」せいちょうものがたり 発表日：2018/09/10\n制御回路交流会2018in大工大 にて発表した資料、NHK2018に向けてRobohanで行った開発のお話\n  「かいろ」せいちょうものがたり  from どと〜る   ","date":1601999112,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1601999112,"objectID":"bdf5fd4a5b53e912c62276212ef33fa9","permalink":"https://www.hahahahaha-nnn.work/pages/resource/","publishdate":"2020-10-07T00:45:12+09:00","relpermalink":"/pages/resource/","section":"pages","summary":"インターネット上に公開している各種資料","tags":["回路"],"title":"公開資料","type":"pages"},{"authors":["HidetoNiwa"],"categories":["slack"],"content":"こんにちは、どと～ること、にゎ～んです。NHK学生ロボコンもついに2021のルールが発表されましたね。\nSlackのワークスペースの移行が行われていたりしてます。\nそのSlackのワークスペース移行に当たって、「カスタム絵文字」（自分たちで追加したスタンプのこと）の移行が面倒になったりします。 移行の方法に関して、インターネットの広い海に書かれていたりしますが、Slack apiの仕様が変更になったりして方法が変わっていたので2020/09現在の方法に関して、 備忘録をかねて記載していきたいと思います。\n基本環境 Windows10(64bit)　2020/09/27現在\n※MacやLinuxでもNode.jsさえインストールしてしまえば同様だと思います。（未検証）\n絵文字をSlackからエクスポート Node.jsのインストール  Node.js 公式サイトへアクセス、自分のPCに合うインストーラをダウンロード。（筆者は12.18.4LTSをインストール）\nインストーラがダウンロード出来たら適当にYesをクリックしていきインストールする。\n（この時、Add PATHにチェックが入っているか確認する。）\n各種モジュールインストール 下記コマンドをコマンドプロンプト/PowerShellで実行し、インストールを行う。\nnpm install slack-node npm install request npm install fs  Slack API Tokenの準備  Slack apiへアクセスし、画面中央の\u0026quot;Start Building\u0026quot;をクリックする。\nすると、下記画像の様に出てくるので、適当に Slack App 名を決め、インストールするワークスペースを指定し、\u0026ldquo;create app\u0026quot;をクリックする。   続いて、Permissionsをクリックする。これによって、Permission管理ができる。   ページ中央部に\u0026quot;Scopes\u0026quot;があるので、\u0026ldquo;Add an OAuth Scope\u0026quot;をクリックし、\u0026ldquo;emoji:read\u0026quot;を追加する。(赤色下線部)\nそして、ページ上部の\u0026quot;Install App to Workspace\u0026quot;をクリックする。   そして、ワークスペース連携の許可を求められるので、許可する。\nすると、\u0026ldquo;Bot User OAuth Access Token\u0026quot;が表示される。このTokenは後々使用するのでCopyしてメモる。   インポートスクリプト作成 インポートしたいディレクトリで、\u0026ldquo;app.js\u0026quot;といったファイル名で下記ファイルを作成する。\nまた、同じディレクトリに\u0026quot;image\u0026quot;といったディレクトリも作成する。\nvar Slack = require('slack-node'); var request = require('request'); var fs = require('fs'); apiToken = \u0026quot;\u0026lt;API Token\u0026gt;\u0026quot;; // Slack APIトークンを\u0026quot; \u0026quot;内に貼り付け slack = new Slack(apiToken); slack.api(\u0026quot;emoji.list\u0026quot;, function (err, response) { for(key in response.emoji){ url = response.emoji[key]; //エイリアスは無視 if(url.match(/alias/)){ continue; } // 取得対象の拡張子 extention = url.match(/\\.[^\\.]+$/); request .get(url) .on('response', function (res) { }) .pipe(fs.createWriteStream('image/' + key + extention)); } });  実行 下記コマンドを実行して、カスタム絵文字のダウンロードを行う。\nnode app.js  絵文字のSlackへインポート Slack Custom Emoji Manager(Chrome拡張機能) のインストール  Slack Custom Emoji Manager(Chrome拡張機能)へchrome/edge（最新版）等、chrome拡張機能が使えるブラウザでアクセスし、「chromeに追加」をクリック\nすると、https://(ワークスペース名).slack.com/customize/emoji へアクセスすると下記画像の様になる。 \u0026ldquo;ここに追加したい絵文字をドラック＆ドロップ\u0026quot;で投下すると、絵文字の追加が順次行われていく。   まとめ 以上で、Slackのカスタム絵文字の移行は完了です！\nAPIは生物なので、開発の具合やユーザ要望によって仕様変更が起こるのは多々ですよね\u0026hellip;\n今後はどうなっていくのやら🤔\n参考情報 chrome拡張機能を入れると、\u0026ldquo;すべての絵文字をダウンロード\u0026quot;とボタンがあるがダウンロードすることは出来ない。\n（API仕様変更のため\u0026hellip;?，作成者様の Qiita記事にはできると書かれているのだが\u0026hellip;）\n下記サイトを参考にさせていただきました。\n  Slack カスタム絵文字 一括ダウンロード・インストール方法 まとめ  Slackのカスタム絵文字を一括ダウンロード・削除するChrome拡張を作ってみた  ","date":1601141934,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1601141934,"objectID":"dd0748c0d9452e1684186ea7843a8251","permalink":"https://www.hahahahaha-nnn.work/post/slack-emoji-move/","publishdate":"2020-09-27T02:38:54+09:00","relpermalink":"/post/slack-emoji-move/","section":"post","summary":"Slackのカスタム絵文字のエクスポート/インポート方法","tags":["slack"],"title":"Slackのカスタム絵文字の移行","type":"post"},{"authors":["HidetoNiwa"],"categories":["Hugo","Academic"],"content":"はじめに こんにちは！どと～ることにゎ～んです。\nこれまでに、Hugoの環境構築の仕方、投稿の仕方と投稿を出してきました。\n  Windows上でのHugoの構築の仕方  Hugoでの投稿の仕方  これらをもとに、今回は、HugoのAcademicテーマの導入に関して記述していきたいと思います。\nAcademic テーマとは HugoのAcademicテーマとは、数多くあるHugoのテーマの中で最もGitHub上でスターがつけられている（らしい）\n実は本サイトでも採用しています。ブログと、個人/組織紹介を兼ねたWebサイトに向いています。\nAcademicテーマサンプル導入 それでは、実際にAcademicテーマの導入を進めて行きたいと思います。\n（以下、Hugo,gitがコマンドラインで使用可能であることを前提に話を進めていきます。）\ngit clone コマンドラインを開き、下記コマンドを入力します。\ngit clone https://github.com/sourcethemes/academic-kickstart.git Site_name これだと、サンプル部分のみgit cloneされAcademicテーマのサブモジュール部分がcloneされないので下記コマンドを順次実行していきます。\ncd Site_name git submodule update --init --recursive そしたら下記コマンドを実行してみます。\nhugo server ここまで、問題がなければ http://localhost:1313/にアクセスしましょう！すると下記画像のように表示されるかと思います。（大体問題になるのは、git submoduleを導入するあたりです。）\n  Academicテーマ動作結果   最後に とりあえず、Academicテーマサンプルページの導入方法は以上になります。\nこのサンプルページをもとに、各種設定を行いGitHub Pageseとして公開をしていくのはまた後々のお話\u0026hellip;\nまた、他のHugoテーマと同様にCSSや設定をカスタマイズすることが可能です！（このサイトでは、記事の表示幅、フォントをカスタマイズしています。）\n気が向いたら、その辺も書いていきましょうかねぇ.。o○\n参考   Hugo + Academic テーマを使ったブログの作り方  ","date":1590074976,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590074976,"objectID":"c1b98140109fcacb4869c1bbf15bed54","permalink":"https://www.hahahahaha-nnn.work/post/hugo_academic/","publishdate":"2020-05-22T00:29:36+09:00","relpermalink":"/post/hugo_academic/","section":"post","summary":"HugoでのAcademicテーマを使用したサイトの製作方法","tags":["Hugo","Academic"],"title":"Hugo Academicテーマの導入","type":"post"},{"authors":["HidetoNiwa"],"categories":["関西春ロボコン","robohan","OUXT","scramble"],"content":"自分が、現在/過去に関連したプロジェクト等のリンク集です。\nそれぞれの活動にご賛同いただけましたらご支援等頂けますと幸いです。\n現在所属しているプロジェクト 関西春ロボコン運営委員会   概要 春ロボコン（関西大会）の主催団体\n所属  2021年大会 運営委員会長 広報係 資金獲得係   運営委員会長として、運営委員会全体のマネジメントを行っています。\n大会の広報/資金獲得のお仕事もしています。\n 参考リンク  Home Page： https://関西春ロボコン.com/ Twitter： @kansai_robocon GitHub： https://github.com/Kansai-SpringRobocon  OUXT Polaris   概要  Maritime Robotx Challengeへむけて結成された学生主体のロボコンチーム。\nWAM-Vといった船体に制御機器、センサーを搭載し、完全自動操縦で大会中のタスクをこなしていく。\n所属  2020年大会 副リーダー\n 運営班   チームの運営仕事（事務仕事が主）を行っています。\n広報関係を主にやっています。\n 参考リンク  Home Page： https://www.ouxt.jp/ Twitter： @OUXT_Polaris GitHub： https://github.com/OUXT-Polaris  一般社団法人次世代ロボットエンジニア支援機構（通称：Scramble）   概要 日本のものづくりを担う次世代エンジニアの育成、およびものづくり業界・文化の活性化を目指して設立された団体。\n次世代のエンジニアとなる子ども達を、大人、企業または社会が協調し一体となって支援、育成し界隈をさらに、 活性化させていく。\n参考： 一般社団法人次世代ロボットエンジニア支援機構 HP/機構について/機構の概要\n所属 運営（専任）・広報イベントグループ イベント係\n 運営専任で様々なイベント設計に関わっています。\n 参考リンク  Home Page： https://scramble-robot.org/ Twitter： @scramble_jpn Facebook： @ScrambleRobocon Instagram： @scramble_rbcn  過去に所属していたプロジェクト 大阪大学公認ロボット製作団体 Robohan   概要 大阪大学におけるNHK学生ロボコン優勝を目指したプロジェクト。\n大阪大学公認のロボット製作団体でもある。\n所属  2016年入学 回路班 NHK学生ロボコン2018 ピットメンバ 会計・キャチロボ運営・関西春ロボ運営・サーバ  参考リンク  ホームページ： https://www.robohan.net/ ブログ： https://blog.robohan.net/ Twitter： @Robohan_ GitHub： https://github.com/RobohanOU 大阪大学未来基金： https://www.miraikikin.osaka-u.ac.jp/450/  ","date":1589531944,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589531944,"objectID":"424069113a08a4256349764ee38dbbbf","permalink":"https://www.hahahahaha-nnn.work/links/","publishdate":"2020-05-15T17:39:04+09:00","relpermalink":"/links/","section":"","summary":"所属する団体に関する軽い紹介","tags":["関西春ロボコン","robohan","OUXT","scramble"],"title":"所属団体 紹介","type":"page"},{"authors":["HidetoNiwa"],"categories":["Hugo"],"content":"このページでは、Hugoでよく使われるShortCodeについて書いて行きます。\nfigure {{\u0026lt; figure src=\u0026rdquo;/img/pages/hugo-shortcode/avatar.jpg\u0026rdquo; title=\u0026quot;画像投稿サンプル\u0026rdquo; width=\u0026quot;150px\u0026rdquo;\u0026gt;}}\n出力例   画像投稿サンプル   パラメータ src /static/以下のファイルパス\ntitle 画像につけるタイトル\nwidth 画像幅(px,%で指定可能)\n参考  shortcodeに関する公式リファレンス： https://gohugo.io/content-management/shortcodes/  ","date":1589528400,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589528400,"objectID":"652836e2b1d0355c5c623d7fc7e1fc07","permalink":"https://www.hahahahaha-nnn.work/pages/hugo-shortcode/","publishdate":"2020-05-15T16:40:00+09:00","relpermalink":"/pages/hugo-shortcode/","section":"pages","summary":"このページでは、Hugoでよく使われるShortCodeにつ","tags":["Hugo"],"title":"Hugo Shortcode","type":"pages"},{"authors":["HidetoNiwa"],"categories":["Hugo"],"content":"はじめに こんにちは、どと～ることにゎ～んです。さて以前、HugoをWindows上で環境構築する方法を示しました。今回はHugoを使ってプロジェクトを作成する方法を示したいと思います。\nHugoプロジェクトの作成 PowerShell、Terminalなど使用OSにおけるコマンドコンソール（以下、コマンドライン）を開き、プロジェクトを作成したいディレクトリにcdやmkdirを使用して移動します。移動した先で、 hugo new site test と実行します。すると、そのディレクトリに、testといったフォルダが作成されます。その中身をtreeコマンドを用いて確認すると、 test ├─archetypes ├─content ├─data ├─layouts ├─resources │ └─_gen │ ├─assets │ └─images ├─static └─themes といった階層になっているのが確認できます。\nテーマ導入 これでプロジェクトは完成しましたが、これではサイトとして表示されないので、テーマを導入していきたいと思います。ここでは、cupperといったシンプルなテーマを使用していきます。コマンドラインで、 cd test/themes とthemesディレクトリに移動します。 git clone https://github.com/zwbetz-gh/cupper-hugo-theme.git として、git上から拾ってきます。\n設定ファイル編集 先ほど、git clone してきたテーマを利用するために、設定ファイルの記述を行います。設定ファイルは、test/config.tomlです。これを開くと、 baseURL = \u0026#34;http://example.org/\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;My New Hugo Site\u0026#34; となっています。これを、 baseURL = \u0026#34;http://localhost:1313/\u0026#34; languageCode = \u0026#34;jp\u0026#34; title = \u0026#34;My New Hugo Site\u0026#34; theme = \u0026#34;cupper-hugo-theme\u0026#34; と、変更します。それぞれの設定項目は以下のようです。\n baseURL：サイトのURL（今回の場合は、ローカル環境での動作環境を行うため上記設定） languageCode：デフォルト言語 title：サイトタイトル theme：使用するテーマ名（/themese/ディレクトリに存在するフォルダ名）  新しいページ生成 さて、使用するテーマまで設定することができたので、新しいページを生成していきたいと思います。 コマンドラインで、 cd test とtestディレクトリに移動し、 hugo new test.md\nと入力します。すると、/test/content/ に test.mdといったファイルが生成されます。このファイルを開くと、\n--- title: \u0026#34;Test\u0026#34; date: 2020-05-15T00:32:24+09:00 draft: true --- となっています。この下に、下記のように入力してみます。 --- title: \u0026#34;Test\u0026#34; date: 2020-05-15T00:32:24+09:00 draft: false --- ## これはテストです  ページ中のコンテンツはこの様に表示されます。 保存したのち、コマンドラインに下記のコマンドを入力します。 hugo server そして、 http://localhost:1313/test/ にアクセスします。すると、下記画像のように投稿が反映されたことが分かります！   アクセスした様子   静的なページ生成 先述の部分で、ローカル環境での確認ができたので続いて、Web上に公開するためにhtmlやcssを生成する方法を記述していきます。コマンドラインで/test/ディレクトリ上にて、 hugo と、入力します。すると\u0026hellip; /test/public/ といったディレクトリが生成されます。この中に、index.html や /test/index.html(先ほど示したtestページ)が生成されました！\n以上で、htmlの生成まで出来たのでapache2やnginxを使ってサーバ上にファイルを置いて閲覧することができるようになったかと思います。\n最後に 次回(近いうちに…)、Hugoを使ったテンプレートページでの開発のお話を書いていきたいと思います。\n参考  Hugoでのテーマ追加方法： https://qiita.com/yakimeron/items/42d537374abde5517267  ","date":1589470070,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589470070,"objectID":"d6439ff81a2539d46c91e37c8b31321c","permalink":"https://www.hahahahaha-nnn.work/post/how_to_hugo_post/","publishdate":"2020-05-15T00:27:50+09:00","relpermalink":"/post/how_to_hugo_post/","section":"post","summary":"Hugoプロジェクトの作成方法\u0026静的なサイトの生成方法","tags":["Hugo"],"title":"Hugoでの投稿の仕方","type":"post"},{"authors":["HidetoNiwa"],"categories":["Windows","ファイラー","BroadFiler"],"content":"はじめに こんにちは！どと～ることにゎ～んです。さて、皆さんはWindowsを日ごろ使用しているかと思います。（Macユーザ/Ubuntu(Linux)ユーザもいらっしゃるかと思いますが、本記事はWindowsユーザ向け記事です\u0026hellip;）\nしかし、Windowsのデフォルトのファイルソフト（ファイラー）である、Windows Explorer ですが、作業を進めていくうちにWindow数が多くなっていき、自分がどのフォルダを開いているか分からなくなることが多々あるかと思います。そこで、今回は「BroadFiler」を用いてタブ、グループを使ったファイル操作管理を行っていこうと思います。\nインストールの仕方 インストーラーをダウンロード まず、 ダウンロードサイトにアクセスし、画面中央にある、ダウンロードページへをクリックします。\n続いて、このソフトを今すぐダウンロードをクリックします。\nすると、zip形式でインストーラーをダウンロードできるので、展開します。\n  zipファイルを展開した結果   インストーラーを実行 展開した結果、様々なファイルがありますがsteup.exeを実行するだけで大丈夫です。（他の解凍ソフトはうまくセットアップできなかった時のものらしい）\nsetup.exeを実行したら、「次へ」「同意する」を押していくとセットアップできます。   インストール完了した結果   では、実際に実行してみましょう それでは、実際に実行してみたいと思います。下記画像のようなアイコンが存在すると思うので実行してみます。 なお、ここで注意してほしいのは、右クリックして管理者として実行することです。\n  アイコン   感想 Windwos Explorerにはない、タブ機能、グループ機能がありその辺を欲してる人にとってはとてもありがたいソフトになってるかと思います。\n  実行した結果   そういえば、だいぶ以前にWindows Explorerにタブ機能が実装されるという話があったのですけどどうなったんですかね\u0026hellip;\n","date":1589209217,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589209217,"objectID":"c0326fed407977f1834d356ee7666092","permalink":"https://www.hahahahaha-nnn.work/post/broadfiler/","publishdate":"2020-05-12T00:00:17+09:00","relpermalink":"/post/broadfiler/","section":"post","summary":"タブ機能付きファイラー（BroadFiler）のインストールと使ってみた、ちょこっとの感想","tags":["WIndws","ファイラー","BroadFiler"],"title":"BroadFiler","type":"post"},{"authors":["admin"],"categories":["VScode"],"content":"本ページでは、VScodeで好きなテーマ/拡張機能に関してメモしていきます。\nテーマ Slack Theme Slack風の配色にしてくれるテーマ\nURL: https://marketplace.visualstudio.com/items?itemName=felipe-mendes.slack-theme\n  実際に使用している様子   拡張機能 Japanese Language Pack for Visual Studio Code 言わずと知れた、Visual Studio日本語化拡張機能 これを入れることにより、設定画面とかが基本的に日本語となる\nURL:https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-ja\nTODO Highlight TODO: と記述した部分にをハイライトしてくれる拡張機能\nURL: https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight\nTodo+ コメントアウトでTODO:と書いた部分をリストアップしてくれる拡張機能\nURL: https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus\nMarkdown All in One MarkDownで記述した時、補完を自動で行ってくれるもの\nURL:https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\n","date":1589090437,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589090437,"objectID":"15cf842f17a971e5f5d6f4d0ccb16d81","permalink":"https://www.hahahahaha-nnn.work/pages/vscode/","publishdate":"2020-05-10T15:00:37+09:00","relpermalink":"/pages/vscode/","section":"pages","summary":"VScodeで好きなテーマ/拡張機能","tags":["VScode"],"title":"VScode","type":"pages"},{"authors":["HidetoNiwa"],"categories":["Hugo","Windows"],"content":"はじめに こんにちは！どと～ること、にゎ～んです。さて、今日はhugoのWindowsでの環境構築のやり方について記述していきたいと思います。\nHugoとは 導入として、Hugoの紹介。Hugoとは、「静的ファイルでサイトを作るための支援ツール」です。 他のWebページ作成ツールとして、Wordpressなどありますがこれらのサイトにはデータベース等が必要となり、保守/管理といった点からも煩雑さが目立ちます。[1]\n基本的に、HugoのサイトはMarkDown（GitHubとかのReadMe.mdとか）形式で記述することができ、記述の容易性等も挙げることができるかと思います。\nWindows上でのHugoの環境構築 Windows上のhugo環境構築方法として下記の2種類を用いた方法があるそうです。[2]\n scoop Chocolatey  それぞれ、UbuntuやCentOSで言うところのaptやyumといったパッケージ管理ソフトだそうです。（筆者もよくわかってませんけど、できたからよし！！！）今回ではscoopを用いた方法にしてみたいと思います。\n（下準備）scoopの環境構築 それでは、下準備としてscoopの環境構築を行っていきたいと思います。 まず、PowerShellを起動します。\nそして、続いて下記コマンドを実行します。\nSet-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force iwr -useb get.scoop.sh | iex 以上で完了です！！！早いですね、簡単ですね、誰でもできそうですね。\n確認方法 scoop help これで、Scoopの各種コマンドの確認ができます。\nPowerShell管理者権限に関して サイトによっては、\u0026ldquo;管理者権限で\u0026quot;って記述も見られますが、Hugoの環境構築を行いたい場合は普通の状態で構いません ってか、管理者権限で環境構築すると、管理者として今後走らせないといけない煩雑さが生まれたりもする？*要検証\nHugoの環境構築 それでは、続いてHugoの環境構築を行っていきます。Hugoには、\u0026lsquo;\u0026lsquo;\u0026lsquo;Hugo'\u0026lsquo;\u0026lsquo;と'\u0026lsquo;\u0026lsquo;Hugo Extended'\u0026lsquo;\u0026lsquo;と2種類存在します。\n特に理由がない場合は、\u0026lsquo;\u0026lsquo;\u0026lsquo;Hugo Extended'\u0026lsquo;\u0026lsquo;のインストールをおすすめします。（上位互換のため\u0026hellip;）一部のテーマは、\u0026lsquo;\u0026lsquo;\u0026lsquo;Hugo Extended'\u0026lsquo;\u0026lsquo;でないとコンパイルできないときがあります。\nインストールには下記のコマンドをPowerShellで実行すれば大丈夫です。[3]\nHugo Extended scoop install hugo-extended Hugo scoop install hugo-extended 最後に 以上で、HugoのWindows上に環境構築する方法はおしまいです！これであなたも静的な安定したWebページライフを！\n参考  https://knowledge.sakura.ad.jp/22908/  Hugoに関する紹介に使用させていただきました。   https://qiita.com/Dooteeen/items/12dc8fb14042888113d0  Scoopのインストール方法を参考にさせて頂きました。   https://gohugo.io/getting-started/installing/  hugo公式ドキュメント、windowsでの環境構築のお話が書かれている    ","date":1588907700,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1588907700,"objectID":"3172f03ae9d43c6b7dacc21f5c3df06b","permalink":"https://www.hahahahaha-nnn.work/post/hugo_in_windows/","publishdate":"2020-05-08T12:15:00+09:00","relpermalink":"/post/hugo_in_windows/","section":"post","summary":"Windowsにおけるhugoのセットアップの仕方","tags":["Hugo","Windows"],"title":"Hugo(Windows)セットアップ","type":"post"},{"authors":["HidetoNiwa"],"categories":["その他"],"content":"お久しぶりです！どと～ること、にゎ～んです。\nさて、以前より運営していたどと～るブログの方ですが、諸般の事情によりサイトを閉鎖しました。まぁ、その辺の事情等は後々書いていこうかと思っていたりもします。\n以前のサイトと同様に技術系に関することを中心に記述していきたいと思います。流し読み程度にご覧いただければと思いますのでよろしくお願いします.。o○\n","date":1588173341,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1588173341,"objectID":"2891ef7ac669613ed704a6ee4440ca95","permalink":"https://www.hahahahaha-nnn.work/post/first-post/","publishdate":"2020-04-30T00:15:41+09:00","relpermalink":"/post/first-post/","section":"post","summary":"はじめての投稿","tags":["初めての投稿"],"title":"投稿方針/サイト移設に関して","type":"post"}]