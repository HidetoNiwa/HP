[{"authors":["HidetoNiwa"],"categories":null,"content":"大阪大学ロボット製作団体Robohan OB（回路班/運営系/鯖管）\nOUXT　回路/運営班\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"ja","lastmod":-62135596800,"objectID":"9adb3980340c1e023a05a0363201ed37","permalink":"https://www.hahahahaha-nnn.work/author/%E3%81%A8%E3%81%A8%E3%82%8B/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E3%81%A8%E3%81%A8%E3%82%8B/","section":"authors","summary":"大阪大学ロボット製作団体Robohan OB（回路班/運営系/","tags":null,"title":"どと～る","type":"authors"},{"authors":["HidetoNiwa"],"categories":["Hugo"],"content":"このページでは、Hugoでよく使われるShortCodeについて書いて行きます。\nfigure {{\u0026lt; figure src=\u0026rdquo;/img/pages/hugo-shortcode/avatar.jpg\u0026rdquo; title=\u0026quot;画像投稿サンプル\u0026rdquo; width=\u0026quot;150px\u0026rdquo;\u0026gt;}}\n出力例   画像投稿サンプル   パラメータ src /static/以下のファイルパス\ntitle 画像につけるタイトル\nwidth 画像幅(px,%で指定可能)\n参考  shortcodeに関する公式リファレンス： https://gohugo.io/content-management/shortcodes/  ","date":1589528400,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589528400,"objectID":"652836e2b1d0355c5c623d7fc7e1fc07","permalink":"https://www.hahahahaha-nnn.work/pages/hugo-shortcode/","publishdate":"2020-05-15T16:40:00+09:00","relpermalink":"/pages/hugo-shortcode/","section":"pages","summary":"このページでは、Hugoでよく使われるShortCodeにつ","tags":["Hugo"],"title":"Hugo Shortcode","type":"pages"},{"authors":["HidetoNiwa"],"categories":["Hugo"],"content":"はじめに こんにちは、どと～ることにゎ～んです。さて以前、HugoをWindows上で環境構築する方法を示しました。今回はHugoを使ってプロジェクトを作成する方法を示したいと思います。\nHugoプロジェクトの作成 PowerShell、Terminalなど使用OSにおけるコマンドコンソール（以下、コマンドライン）を開き、プロジェクトを作成したいディレクトリにcdやmkdirを使用して移動します。移動した先で、 hugo new site test と実行します。すると、そのディレクトリに、testといったフォルダが作成されます。その中身をtreeコマンドを用いて確認すると、 test ├─archetypes ├─content ├─data ├─layouts ├─resources │ └─_gen │ ├─assets │ └─images ├─static └─themes といった階層になっているのが確認できます。\nテーマ導入 これでプロジェクトは完成しましたが、これではサイトとして表示されないので、テーマを導入していきたいと思います。ここでは、cupperといったシンプルなテーマを使用していきます。コマンドラインで、 cd test/themes とthemesディレクトリに移動します。 git clone https://github.com/zwbetz-gh/cupper-hugo-theme.git として、git上から拾ってきます。\n設定ファイル編集 先ほど、git clone してきたテーマを利用するために、設定ファイルの記述を行います。設定ファイルは、test/config.tomlです。これを開くと、 baseURL = \u0026#34;http://example.org/\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;My New Hugo Site\u0026#34; となっています。これを、 baseURL = \u0026#34;http://localhost:1313/\u0026#34; languageCode = \u0026#34;jp\u0026#34; title = \u0026#34;My New Hugo Site\u0026#34; theme = \u0026#34;cupper-hugo-theme\u0026#34; と、変更します。それぞれの設定項目は以下のようです。\n baseURL：サイトのURL（今回の場合は、ローカル環境での動作環境を行うため上記設定） languageCode：デフォルト言語 title：サイトタイトル theme：使用するテーマ名（/themese/ディレクトリに存在するフォルダ名）  新しいページ生成 さて、使用するテーマまで設定することができたので、新しいページを生成していきたいと思います。 コマンドラインで、 cd test とtestディレクトリに移動し、 hugo new test.md\nと入力します。すると、/test/content/ に test.mdといったファイルが生成されます。このファイルを開くと、\n--- title: \u0026#34;Test\u0026#34; date: 2020-05-15T00:32:24+09:00 draft: true --- となっています。この下に、下記のように入力してみます。 --- title: \u0026#34;Test\u0026#34; date: 2020-05-15T00:32:24+09:00 draft: false --- ## これはテストです  ページ中のコンテンツはこの様に表示されます。 保存したのち、コマンドラインに下記のコマンドを入力します。 hugo server そして、 http://localhost:1313/test/ にアクセスします。すると、下記画像のように投稿が反映されたことが分かります！   アクセスした様子   静的なページ生成 先述の部分で、ローカル環境での確認ができたので続いて、Web上に公開するためにhtmlやcssを生成する方法を記述していきます。コマンドラインで/test/ディレクトリ上にて、 hugo と、入力します。すると\u0026hellip; /test/public/ といったディレクトリが生成されます。この中に、index.html や /test/index.html(先ほど示したtestページ)が生成されました！\n以上で、htmlの生成まで出来たのでapache2やnginxを使ってサーバ上にファイルを置いて閲覧することができるようになったかと思います。\n最後に 次回(近いうちに…)、Hugoを使ったテンプレートページでの開発のお話を書いていきたいと思います。\n参考  Hugoでのテーマ追加方法： https://qiita.com/yakimeron/items/42d537374abde5517267  ","date":1589470070,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589470070,"objectID":"d6439ff81a2539d46c91e37c8b31321c","permalink":"https://www.hahahahaha-nnn.work/post/how_to_hugo_post/","publishdate":"2020-05-15T00:27:50+09:00","relpermalink":"/post/how_to_hugo_post/","section":"post","summary":"Hugoプロジェクトの作成方法\u0026静的なサイトの生成方法","tags":["Hugo"],"title":"Hugoでの投稿の仕方","type":"post"},{"authors":["HidetoNiwa"],"categories":["Windows","ファイラー","BroadFiler"],"content":"はじめに こんにちは！どと～ることにゎ～んです。さて、皆さんはWindowsを日ごろ使用しているかと思います。（Macユーザ/Ubuntu(Linux)ユーザもいらっしゃるかと思いますが、本記事はWindowsユーザ向け記事です\u0026hellip;）\nしかし、Windowsのデフォルトのファイルソフト（ファイラー）である、Windows Explorer ですが、作業を進めていくうちにWindow数が多くなっていき、自分がどのフォルダを開いているか分からなくなることが多々あるかと思います。そこで、今回は「BroadFiler」を用いてタブ、グループを使ったファイル操作管理を行っていこうと思います。\nインストールの仕方 インストーラーをダウンロード まず、 ダウンロードサイトにアクセスし、画面中央にある、ダウンロードページへをクリックします。\n続いて、このソフトを今すぐダウンロードをクリックします。\nすると、zip形式でインストーラーをダウンロードできるので、展開します。\n  zipファイルを展開した結果   インストーラーを実行 展開した結果、様々なファイルがありますがsteup.exeを実行するだけで大丈夫です。（他の解凍ソフトはうまくセットアップできなかった時のものらしい）\nsetup.exeを実行したら、「次へ」「同意する」を押していくとセットアップできます。   インストール完了した結果   では、実際に実行してみましょう それでは、実際に実行してみたいと思います。下記画像のようなアイコンが存在すると思うので実行してみます。 なお、ここで注意してほしいのは、右クリックして管理者として実行することです。\n  アイコン   感想 Windwos Explorerにはない、タブ機能、グループ機能がありその辺を欲してる人にとってはとてもありがたいソフトになってるかと思います。\n  実行した結果   そういえば、だいぶ以前にWindows Explorerにタブ機能が実装されるという話があったのですけどどうなったんですかね\u0026hellip;\n","date":1589209217,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589209217,"objectID":"c0326fed407977f1834d356ee7666092","permalink":"https://www.hahahahaha-nnn.work/post/broadfiler/","publishdate":"2020-05-12T00:00:17+09:00","relpermalink":"/post/broadfiler/","section":"post","summary":"タブ機能付きファイラー（BroadFiler）のインストールと使ってみた、ちょこっとの感想","tags":["WIndws","ファイラー","BroadFiler"],"title":"BroadFiler","type":"post"},{"authors":["admin"],"categories":["VScode"],"content":"本ページでは、VScodeで好きなテーマ/拡張機能に関してメモしていきます。\nテーマ Slack Theme Slack風の配色にしてくれるテーマ\nURL: https://marketplace.visualstudio.com/items?itemName=felipe-mendes.slack-theme\n  実際に使用している様子   拡張機能 Japanese Language Pack for Visual Studio Code 言わずと知れた、Visual Studio日本語化拡張機能 これを入れることにより、設定画面とかが基本的に日本語となる\nURL:https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-ja\nTODO Highlight TODO: と記述した部分にをハイライトしてくれる拡張機能\nURL: https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight\nTodo+ コメントアウトでTODO:と書いた部分をリストアップしてくれる拡張機能\nURL: https://marketplace.visualstudio.com/items?itemName=fabiospampinato.vscode-todo-plus\nMarkdown All in One MarkDownで記述した時、補完を自動で行ってくれるもの\nURL:https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\n","date":1589090437,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589090437,"objectID":"15cf842f17a971e5f5d6f4d0ccb16d81","permalink":"https://www.hahahahaha-nnn.work/pages/vscode/","publishdate":"2020-05-10T15:00:37+09:00","relpermalink":"/pages/vscode/","section":"pages","summary":"VScodeで好きなテーマ/拡張機能","tags":["VScode"],"title":"VScode","type":"pages"},{"authors":["HidetoNiwa"],"categories":["Hugo","Windows"],"content":"はじめに こんにちは！どと～ること、にゎ～んです。さて、今日はhugoのWindowsでの環境構築のやり方について記述していきたいと思います。\nHugoとは 導入として、Hugoの紹介。Hugoとは、「静的ファイルでサイトを作るための支援ツール」です。 他のWebページ作成ツールとして、Wordpressなどありますがこれらのサイトにはデータベース等が必要となり、保守/管理といった点からも煩雑さが目立ちます。[1]\n基本的に、HugoのサイトはMarkDown（GitHubとかのReadMe.mdとか）形式で記述することができ、記述の容易性等も挙げることができるかと思います。\nWindows上でのHugoの環境構築 Windows上のhugo環境構築方法として下記の2種類を用いた方法があるそうです。[2]\n scoop Chocolatey  それぞれ、UbuntuやCentOSで言うところのaptやyumといったパッケージ管理ソフトだそうです。（筆者もよくわかってませんけど、できたからよし！！！）今回ではscoopを用いた方法にしてみたいと思います。\n（下準備）scoopの環境構築 それでは、下準備としてscoopの環境構築を行っていきたいと思います。 まず、PowerShellを起動します。\nそして、続いて下記コマンドを実行します。\nSet-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force iwr -useb get.scoop.sh | iex 以上で完了です！！！早いですね、簡単ですね、誰でもできそうですね。\n確認方法 scoop help これで、Scoopの各種コマンドの確認ができます。\nPowerShell管理者権限に関して サイトによっては、\u0026ldquo;管理者権限で\u0026quot;って記述も見られますが、Hugoの環境構築を行いたい場合は普通の状態で構いません ってか、管理者権限で環境構築すると、管理者として今後走らせないといけない煩雑さが生まれたりもする？*要検証\nHugoの環境構築 それでは、続いてHugoの環境構築を行っていきます。Hugoには、\u0026lsquo;\u0026lsquo;\u0026lsquo;Hugo'\u0026lsquo;\u0026lsquo;と'\u0026lsquo;\u0026lsquo;Hugo Extended'\u0026lsquo;\u0026lsquo;と2種類存在します。\n特に理由がない場合は、\u0026lsquo;\u0026lsquo;\u0026lsquo;Hugo Extended'\u0026lsquo;\u0026lsquo;のインストールをおすすめします。（上位互換のため\u0026hellip;）一部のテーマは、\u0026lsquo;\u0026lsquo;\u0026lsquo;Hugo Extended'\u0026lsquo;\u0026lsquo;でないとコンパイルできないときがあります。\nインストールには下記のコマンドをPowerShellで実行すれば大丈夫です。[3]\nHugo Extended scoop install hugo-extended Hugo scoop install hugo-extended 最後に 以上で、HugoのWindows上に環境構築する方法はおしまいです！これであなたも静的な安定したWebページライフを！\n参考  https://knowledge.sakura.ad.jp/22908/  Hugoに関する紹介に使用させていただきました。   https://qiita.com/Dooteeen/items/12dc8fb14042888113d0  Scoopのインストール方法を参考にさせて頂きました。   https://gohugo.io/getting-started/installing/  hugo公式ドキュメント、windowsでの環境構築のお話が書かれている    ","date":1588907700,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1588907700,"objectID":"3172f03ae9d43c6b7dacc21f5c3df06b","permalink":"https://www.hahahahaha-nnn.work/post/hugo_in_windows/","publishdate":"2020-05-08T12:15:00+09:00","relpermalink":"/post/hugo_in_windows/","section":"post","summary":"Windowsにおけるhugoのセットアップの仕方","tags":["Hugo","Windows"],"title":"Hugo(Windows)セットアップ","type":"post"},{"authors":["HidetoNiwa"],"categories":["その他"],"content":"お久しぶりです！どと～ること、にゎ～んです。\nさて、以前より運営していたどと～るブログの方ですが、諸般の事情によりサイトを閉鎖しました。まぁ、その辺の事情等は後々書いていこうかと思っていたりもします。\n以前のサイトと同様に技術系に関することを中心に記述していきたいと思います。流し読み程度にご覧いただければと思いますのでよろしくお願いします.。o○\n","date":1588173341,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1588173341,"objectID":"2891ef7ac669613ed704a6ee4440ca95","permalink":"https://www.hahahahaha-nnn.work/post/first-post/","publishdate":"2020-04-30T00:15:41+09:00","relpermalink":"/post/first-post/","section":"post","summary":"はじめての投稿","tags":["初めての投稿"],"title":"投稿方針/サイト移設に関して","type":"post"}]